---
---

<language-toggle>
  <button>
    <span class="language en"><p>EN</p></span>
    <span class="language pt"><p>PT-BR</p></span>
  </button>
</language-toggle>

<style>
  button {
    display: flex;
    border: 0;
    border-radius: 0.5rem;
    padding: 0;
    background-color: var(--gray-999);
    box-shadow: inset 0 0 0 1px var(--accent-overlay);
    cursor: pointer;
  }

  .language {
    z-index: 1;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 4rem;
    height: 2rem;
    font-size: 1rem;
    color: var(--accent-overlay);
  }

  .language.en::before {
    content: "";
    z-index: -1;
    position: absolute;
    inset: 0;
    background-color: var(--accent-regular);
    border-radius: 0.5rem;
  }

  .language p {
    color: var(--gray-200);
    font-weight: 600;
    font-size: medium;
  }

  button[aria-pressed="true"] .language.en::before {
    transform: translateX(100%);
  }

  .language.pt,
  .language.en,
  button[aria-pressed="false"] .language.en {
    color: var(--accent-text-over);
  }

  @media (prefers-reduced-motion: no-preference) {
    .language,
    .language.en::before {
      transition: transform var(--theme-transition),
        color var(--theme-transition);
    }
  }

  @media (forced-colors: active) {
    .language.en::before {
      background-color: SelectedItem;
    }
  }
</style>
<script>
  class LanguageToggle extends HTMLElement {
    constructor() {
      super();

      const button = this.querySelector("button")!;

      let currentLocale =
        window.location.pathname.slice(1, 3) === "pt" ? "pt" : "en";

      if (currentLocale === "pt") {
        button.setAttribute("aria-pressed", String("true"));
      } else {
        button.setAttribute("aria-pressed", String("false"));
      }

      /** Set the theme to dark/light mode. */
      const setLanguage = (currentLocale: string) => {
        if (currentLocale === "en") {
          currentLocale = "pt";
          window.open(
            `${window.location.origin}/pt${
              window.location.pathname ? window.location.pathname : ""
            }`,
            "_self"
          );
          button.setAttribute("aria-pressed", String("true"));
        } else {
          currentLocale = "en";

          window.open(
            `${window.location.origin}${window.location.pathname.slice(
              3,
              window.location.pathname.length
            )}`,
            "_self"
          );
          button.setAttribute("aria-pressed", String("false"));
        }
      };

      // Toggle the theme when a user clicks the button.
      button.addEventListener("click", () => setLanguage(currentLocale));

      // Initialize button state to reflect current theme.
    }
  }
  customElements.define("language-toggle", LanguageToggle);
</script>
